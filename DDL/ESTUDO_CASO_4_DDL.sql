#FASE 1: CRIAR O BANCO DE DADOS:
CREATE SCHEMA EC4_SI1N;

#FASE 2: SELECIONAR O NOVO ESQUEMA/DATABASE PARA USO:
USE EC4_SI1N;

#FASE 3 CRIANDO AS TABELAS SEM CHAVES ESTRANGEIRAS:
CREATE TABLE IF NOT EXISTS ALUNOS(
ID_ALUNOS INT PRIMARY KEY auto_increment,
NOME_ALUNO VARCHAR(50) NOT NULL,
CPF_ALUNO VARCHAR(14) NOT NULL,
DATA_NASC_ALUNO DATE,
RUA_ALUNO VARCHAR(45),
BAIRRO_ALUNO VARCHAR(45),
CIDADE_ALUNO VARCHAR(45),
NUM_CASA_ALUNO VARCHAR(10),
UF_ALUNO CHAR(2),
CEP_ALUNO VARCHAR(45),
EMAIL_ALUNO VARCHAR(100),
TEL_ALUNO VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS INSTRUTORES(
ID_INSTRUTOR INT PRIMARY KEY AUTO_INCREMENT,
NOME_INSTRUTOR VARCHAR(45) NOT NULL,
CPF_INSTRUTOR VARCHAR(14) NOT NULL
);

CREATE TABLE IF NOT EXISTS MODALIDADES(
ID_MODALIDADE INT PRIMARY KEY AUTO_INCREMENT,
NOME_MODALIDADE VARCHAR(45)
);

CREATE TABLE IF NOT EXISTS PAGAMENTOS(
ID_PAGT INT PRIMARY KEY AUTO_INCREMENT,
ID_ALUNO INT NOT NULL,
DATA_PAGT DATE NOT NULL,
VALOR_PAGT DECIMAL(10,2) NOT NULL,
STATUS_PAGT VARCHAR(20),
CONSTRAINT FK_PAGT_ALUNOS FOREIGN KEY(ID_ALUNO) REFERENCES ALUNOS(ID_ALUNOS)
);

CREATE TABLE IF NOT EXISTS PLANO_TREINO(
ID_ALUNOS INT,
ID_INSTRUTOR INT,
PRIMARY KEY(ID_ALUNOS,ID_INSTRUTOR),
PROGRESS_ALUNO VARCHAR(45),
CONSTRAINT FK_TREINO_ALUNO FOREIGN KEY(ID_ALUNOS) REFERENCES ALUNOS(ID_ALUNOS),
CONSTRAINT FK_TREINO_INSTRUTOR FOREIGN KEY(ID_INSTRUTOR) REFERENCES INSTRUTORES(ID_INSTRUTOR)
);

CREATE TABLE IF NOT EXISTS INSTRUTORES_MODALIDADES(
ID_INSTRUTOR INT,
ID_MODALIDADE INT,
PRIMARY KEY(ID_INSTRUTOR,ID_MODALIDADE),
NOME_MODALIDADE VARCHAR(45),
CONSTRAINT FK_MODINST_MODALIDADES FOREIGN KEY(ID_MODALIDADE) REFERENCES MODALIDADES(ID_MODALIDADE),
CONSTRAINT FK_MODINST_INSTRUTORES FOREIGN KEY(ID_INSTRUTOR) REFERENCES INSTRUTORES(ID_INSTRUTOR)
);

CREATE TABLE IF NOT EXISTS AULAS(
ID_AULA INT PRIMARY KEY AUTO_INCREMENT,
HORA_AULA VARCHAR(45) NOT NULL,
CAPC_AULA INT NOT NULL,
ID_INSTRUTOR_MOD INT,
ID_MODALIDADE_INST INT,
CONSTRAINT FK_AULAS_INSTRUTOR FOREIGN KEY(ID_INSTRUTOR_MOD) REFERENCES INSTRUTORES_MODALIDADES(ID_INSTRUTOR),
CONSTRAINT FK_AULAS_MODALIDADE FOREIGN KEY(ID_MODALIDADE_INST) REFERENCES INSTRUTORES_MODALIDADES(ID_MODALIDADE)
);

CREATE TABLE IF NOT EXISTS AULAS_ALUNOS(
ID_ALUNO INT,
ID_AULA INT,
ID_MODALIDADE INT,
ID_INSTRUTOR INT,
PRIMARY KEY(ID_ALUNO,ID_AULA,ID_MODALIDADE,ID_INSTRUTOR),
CONSTRAINT FK_AULASALUNOS_ALUNO FOREIGN KEY(ID_ALUNO) REFERENCES ALUNOS(ID_ALUNOS),
CONSTRAINT FK_AULASALUNOS_AULA FOREIGN KEY(ID_AULA) REFERENCES AULAS(ID_AULA),
CONSTRAINT FK_AULASALUNOS_MODALIDADE FOREIGN KEY(ID_MODALIDADE) REFERENCES AULAS(ID_MODALIDADE_INST),
CONSTRAINT FK_AULASALUNOS_INSTRUTOR FOREIGN KEY(ID_INSTRUTOR) REFERENCES AULAS(ID_INSTRUTOR_MOD)
);

# ALTER para TABELA ALUNOS
ALTER TABLE ALUNOS 
ADD ALUNO_EMAIL_ALT VARCHAR(100) NOT NULL;

ALTER TABLE ALUNOS 
MODIFY COLUMN EMAIL_ALUNO VARCHAR(150);

ALTER TABLE ALUNOS 
CHANGE COLUMN TEL_ALUNO TELEFONE_ALUNO VARCHAR(45);

ALTER TABLE ALUNOS 
ADD INDEX IDX_ALUNO_EMAIL (EMAIL_ALUNO);

ALTER TABLE ALUNOS 
DROP COLUMN ALUNO_EMAIL_ALT;

# ALTER para TABELA INSTRUTORES
ALTER TABLE INSTRUTORES 
ADD INSTRUTOR_EMAIL VARCHAR(100) NOT NULL;

ALTER TABLE INSTRUTORES 
MODIFY COLUMN CPF_INSTRUTOR VARCHAR(20);

ALTER TABLE INSTRUTORES 
CHANGE COLUMN NOME_INSTRUTOR NOME_COMPLETO_INSTRUTOR VARCHAR(50);

ALTER TABLE INSTRUTORES 
ADD INDEX IDX_INSTRUTOR_CPF (CPF_INSTRUTOR);

ALTER TABLE INSTRUTORES 
DROP COLUMN INSTRUTOR_EMAIL;

# ALTER para TABELA MODALIDADES
ALTER TABLE MODALIDADES 
ADD DESCRICAO_MODALIDADE VARCHAR(100);

ALTER TABLE MODALIDADES 
MODIFY COLUMN NOME_MODALIDADE VARCHAR(50);

ALTER TABLE MODALIDADES 
CHANGE COLUMN NOME_MODALIDADE MODALIDADE_NOME VARCHAR(50);

ALTER TABLE MODALIDADES 
ADD INDEX IDX_MODALIDADE_NOME (MODALIDADE_NOME);

ALTER TABLE MODALIDADES 
DROP COLUMN DESCRICAO_MODALIDADE;

# ALTER para TABELA PAGAMENTOS
ALTER TABLE PAGAMENTOS 
ADD NOTA_PAGAMENTO VARCHAR(100);

ALTER TABLE PAGAMENTOS 
MODIFY COLUMN STATUS_PAGT VARCHAR(25);

ALTER TABLE PAGAMENTOS 
CHANGE COLUMN VALOR_PAGT VALOR_PAGAMENTO DECIMAL(10,2);

ALTER TABLE PAGAMENTOS 
ADD INDEX IDX_STATUS_PAGT (STATUS_PAGT);

ALTER TABLE PAGAMENTOS 
DROP COLUMN NOTA_PAGAMENTO;

# ALTER para TABELA PLANO_TREINO
ALTER TABLE PLANO_TREINO 
ADD NOTA_TREINO VARCHAR(100);

ALTER TABLE PLANO_TREINO 
MODIFY COLUMN PROGRESS_ALUNO VARCHAR(50);

ALTER TABLE PLANO_TREINO 
CHANGE COLUMN PROGRESS_ALUNO PROGRESSO_ALUNO VARCHAR(50);

ALTER TABLE PLANO_TREINO 
ADD INDEX IDX_PROG_ALUNO (PROGRESSO_ALUNO);

ALTER TABLE PLANO_TREINO 
DROP COLUMN NOTA_TREINO;

# ALTER para TABELA INSTRUTORES_MODALIDADES
ALTER TABLE INSTRUTORES_MODALIDADES 
ADD NOTA_INSTRUTOR_MODALIDADE VARCHAR(100);

ALTER TABLE INSTRUTORES_MODALIDADES 
MODIFY COLUMN ID_MODALIDADE INT;

ALTER TABLE INSTRUTORES_MODALIDADES 
CHANGE COLUMN ID_INSTRUTOR ID_DO_INSTRUTOR INT;

ALTER TABLE INSTRUTORES_MODALIDADES 
ADD INDEX IDX_INSTRUTOR_ID (ID_DO_INSTRUTOR);

ALTER TABLE INSTRUTORES_MODALIDADES 
DROP COLUMN NOTA_INSTRUTOR_MODALIDADE;

# ALTER para TABELA AULAS
ALTER TABLE AULAS 
ADD TIPO_AULA VARCHAR(100);

ALTER TABLE AULAS 
MODIFY COLUMN CAPC_AULA INT(3);

ALTER TABLE AULAS 
CHANGE COLUMN HORA_AULA HORARIO_AULA VARCHAR(45);

ALTER TABLE AULAS 
ADD INDEX IDX_HORARIO_AULA (HORARIO_AULA);

ALTER TABLE AULAS 
DROP COLUMN TIPO_AULA;

# ALTER para TABELA AULAS_ALUNOS
ALTER TABLE AULAS_ALUNOS 
ADD NOTA_AULA_ALUNO VARCHAR(100);

ALTER TABLE AULAS_ALUNOS 
MODIFY COLUMN ID_MODALIDADE INT;

ALTER TABLE AULAS_ALUNOS 
CHANGE COLUMN ID_ALUNO CODIGO_ALUNO INT;

ALTER TABLE AULAS_ALUNOS 
ADD INDEX IDX_ALUNO_AULA (CODIGO_ALUNO);

ALTER TABLE AULAS_ALUNOS 
DROP COLUMN NOTA_AULA_ALUNO;

DROP TABLE IF EXISTS AULAS_ALUNOS;

DROP TABLE IF EXISTS AULAS;

DROP TABLE IF EXISTS INSTRUTORES_MODALIDADES;

DROP TABLE IF EXISTS PLANO_TREINO;

DROP TABLE IF EXISTS PAGAMENTOS;

DROP TABLE IF EXISTS MODALIDADES;

DROP TABLE IF EXISTS INSTRUTORES;

DROP TABLE IF EXISTS ALUNOS;
